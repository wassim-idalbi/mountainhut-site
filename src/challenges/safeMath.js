import e from"../utils/toast.js";export default class{constructor(e,t,n){this.challengeId=e,this.puzzleData=t,this.hints=n,this.expectedResult=t.expectedResult,this.$screen=null,this.$input=null}init(){this.$screen=$(`[data-challenge-id="${this.challengeId}"]`),this.$screen.length?(this.$input=this.$screen.find('input[type="number"]').first(),this.reset(),this.attachEventHandlers(),console.log(`SafeMath challenge initialized: ${this.challengeId}`)):console.error(`Challenge screen not found: ${this.challengeId}`)}attachEventHandlers(){this.$screen.find(".btn-primary").on("click",()=>{this.checkAnswer()}),this.$screen.find(".hint-btn").on("click",()=>{this.showHint()}),this.$input.on("keypress",e=>{13===e.which&&this.checkAnswer()})}checkAnswer(){const t=parseInt(this.$input.val(),10);if(isNaN(t)){const t="ar"===gameState.currentLanguage?"Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø±Ù‚Ù…":"Please enter a number";return e.warning(t),!1}return t===this.expectedResult?(this.onSuccess(),!0):(this.onFailure(),!1)}onSuccess(){const t="ar"===gameState.currentLanguage?"Ø¥Ø¬Ø§Ø¨Ø© ØµØ­ÙŠØ­Ø©!":"Correct Answer!";e.success(t),setTimeout(()=>{$(document).trigger("challengeComplete",[this.challengeId])},500)}onFailure(){const t="ar"===gameState.currentLanguage?"Ø¥Ø¬Ø§Ø¨Ø© Ø®Ø§Ø·Ø¦Ø©. Ø­Ø§ÙˆÙ„ Ù…Ø±Ø© Ø£Ø®Ø±Ù‰":"Incorrect Answer. Try Again";e.error(t),setTimeout(()=>{this.$input.val("").focus()},500)}showHint(){const t=gameState.hintsUsed[this.challengeId];if(t>=gameState.maxHintsPerChallenge){const t="ar"===gameState.currentLanguage?"Ø§Ù†ØªÙ‡Øª Ø§Ù„ØªÙ„Ù…ÙŠØ­Ø§Øª":"No hints remaining";return void e.warning(t)}const n=this.hints[t];this.displayHintInBox(n),gameState.useHint(this.challengeId),this.updateHintDisplay()}displayHintInBox(e){const t=this.$screen.find(".hints-container"),n=t.find(".hint-btn");t.find(".hint-display").length?t.find(".hint-display").text(`ðŸ’¡ ${e}`):n.before(`<div class="hint-display">ðŸ’¡ ${e}</div>`)}updateHintDisplay(){const e=gameState.getRemainingHints(this.challengeId),t=this.$screen.find(".hints-title"),n="ar"===gameState.currentLanguage?`ðŸ’¡ Ø§Ù„ØªÙ„Ù…ÙŠØ­Ø§Øª Ø§Ù„Ù…ØªØ§Ø­Ø© (${e}/3):`:`ðŸ’¡ Available Hints (${e}/3):`;t.text(n),0===e&&this.$screen.find(".hint-btn").prop("disabled",!0).addClass("disabled")}reset(){this.$input.val(""),this.$screen.find(".hint-display").remove(),this.updateHintDisplay()}destroy(){this.$screen.find(".btn-primary").off("click"),this.$screen.find(".hint-btn").off("click"),this.$input.off("keypress"),console.log(`SafeMath challenge destroyed: ${this.challengeId}`)}}